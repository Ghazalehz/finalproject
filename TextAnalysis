#rm(list = ls())

####> Libraries ####

library(caret)
library(readr)
library(dplyr)
library(tidyr)
#library(lubridate)
library(ggplot2)
library(reshape2)
#library(reshape)
library(stringr)
library(syuzhet)
library(viridis)
library(SentimentAnalysis)
library(RSentiment)
library(sentimentr)
library(gutenbergr)
library(tidytext)

library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)

# using gutengergr

#gutenberg_metadata %>% filter(author == "Dostoyevsky, Fyodor")
#Dostoyevsky <- gutenberg_download(c(6536, 2197, 2554,  2638))
# books
# LOR1_raw = read_lines("The Fellowship of the Ring.txt") # read txt file example

####> loading & converting books ####

charlieandthechocolatefactory_raw <- read_lines("Final project//Files//Charlieandthechocolatefactory.txt") # read txt file
crimepunishment_raw  <- read_lines("Final project//Files//Crimeandpunishment.txt") # read txt file
Orwell1984_raw <- read_lines("Final project//Files//1984.txt")
treasureisland_raw <- read_lines("Final project//Files//treasureisland.txt")
mobydick_raw <- read_lines("Final project//Files//mobydick.txt")
fearandloathing_raw <- read_lines("Final project//Files//fearandloathing.txt")


View()

# converting into tidytext
charlieandthechocolatefactory_df <- data_frame(line = 1:3970,text = charlieandthechocolatefactory_raw)
charlieandthechocolatefactory <- charlieandthechocolatefactory_df %>% mutate(linenumber = row_number(),
                                       chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                                                               ignore_case = TRUE)))) 
crimepunishment_df <- data_frame(line = 1:15932,text = crimepunishment_raw)
crimepunishment <- crimepunishment_df %>% mutate(linenumber = row_number(), 
                                                 chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                                 ignore_case = TRUE)))) 

Orwell1984_df <- data_frame(line = 1:10288,text = Orwell1984_raw)
Orwell1984 <- Orwell1984_df %>% mutate(linenumber = row_number(),
                                       chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                       ignore_case = TRUE)))) 

mobydick_df <- data_frame(line = 1:22932,text = mobydick_raw)
mobydick <- mobydick_df %>% mutate(linenumber = row_number(),
                                    chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                    ignore_case = TRUE)))) 

treasureisland_df <- data_frame(line = 1:7500,text = treasureisland_raw)
treasureisland <- treasureisland_df %>% mutate(linenumber = row_number(),
                                   chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                   ignore_case = TRUE))))                                         
 
fearandloathing_df <- data_frame(line = 1:3906,text = fearandloathing_raw)
fearandloathing <- fearandloathing_df %>% mutate(linenumber = row_number(),
                                                 chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                        

                                                                                         
 View(fearandloathing)                                                                                                                                                                           
                                                                                         
#####> word frequencies & word clouds ####

tidy_Orwell1984 <- Orwell1984 %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_Orwell1984 %>%
  count(word, sort = TRUE)

tidy_crimepunishment <- crimepunishment %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_crimepunishment %>%
  count(word, sort = TRUE)

tidy_charlieandthechocolatefactory <- charlieandthechocolatefactory %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_charlieandthechocolatefactory %>%
  count(word, sort = TRUE)

tidy_mobydick <- mobydick %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_mobydick %>%
  count(word, sort = TRUE)

tidy_treasureisland <- treasureisland %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_treasureisland %>%
  count(word, sort = TRUE)

tidy_fearandloathing <- fearandloathing %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_fearandloathing %>%
  count(word, sort = TRUE)

# plots

tidy_charlieandthechocolatefactory %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_Orwell1984 %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_crimepunishment %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_mobydick %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_treasureisland %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_fearandloathing %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

# word cloud 

# 1984
OrwellCloud  <- Corpus (VectorSource(Orwell1984_raw))
OrwellCloud <-tm_map(OrwellCloud, tolower)
OrwellCloud <-tm_map(OrwellCloud, removeNumbers)
OrwellCloud <-tm_map(OrwellCloud, removePunctuation)
OrwellCloud <-tm_map(OrwellCloud, removeWords, stopwords("english"))
OrwellCloud <-tm_map(OrwellCloud, stripWhitespace)
OrwellCloud<-tm_map(OrwellCloud,removeWords, c("winston", "round")) # for removing specific words
TDM_OrwellCloud<-TermDocumentMatrix (OrwellCloud) #Creates a TDM
TDM1<-as.matrix(TDM_OrwellCloud) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word

summary(v)

wordcloud (OrwellCloud , scale=c(5,0.5), max.words=50, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))

# word cloud 
FearCloud <- Corpus (VectorSource(fearandloathing))
FearCloud <-tm_map(FearCloud, tolower)
FearCloud <-tm_map(FearCloud, removeNumbers)
FearCloud <-tm_map(FearCloud, removePunctuation)
FearCloud <-tm_map(FearCloud, removeWords, stopwords("english"))
FearCloud <-tm_map(FearCloud, stripWhitespace)

FearCloud<-tm_map(FearCloud,removeWords, c("said", "just", "can","att")) # for removing specific words

TDM_FearCloud<-TermDocumentMatrix (FearCloud) #Creates a TDM
TDM_Fear<-as.matrix(TDM_FearCloud) #Convert this into a matrix format
#v <- sort(rowSums(TDM_Fear), decreasing = TRUE) #Gives you the frequencies for every word
#v
wordcloud (FearCloud , scale=c(4,0.25), max.words=40, random.order=FALSE, rot.per=0.25, use.r.layout=T, colors=brewer.pal(8, "Dark2"))

#alt
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud_packages.png", width=1280,height=800)

ap.v <- sort(rowSums(TDM_Fear),decreasing=TRUE)
ap.d <- data.frame(word = names(ap.v),freq=ap.v)
table(ap.d$freq)


wordcloud(ap.d$word,ap.d$freq, scale=c(8,.2),min.freq=3,
          max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)

