# rm(list = ls())
####> Libraries ####
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(stringr)
library(syuzhet)
library(viridis)
library(SentimentAnalysis)
library(RSentiment)
library(sentimentr)
library(tidytext)
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
library(textclean)
library(widyr)
library(igraph)
library(ggraph)
library(viridis)
library(zoo)
library(tokenizers)
library(xkcd)
library(extrafont)
library(ggthemes)


####> Loading & converting books ####
charlieandthechocolatefactory_raw <- read_lines("charlieandthechocolatefactory.txt") # read txt file
crimepunishment_raw  <- read_lines("crimeandpunishment.txt") # read txt file
orwell1984_raw <- read_lines("orwell1984.txt") 
mobydick_raw <- read_lines("mobydick.txt")
treasureisland_raw <- read_lines("treasureisland.txt")
hitchhikersguide_raw <- read_lines("hitchhikersguide.txt")

# cleaning & converting into tidytext
charlieandthechocolatefactory_clean <- cleanup(charlieandthechocolatefactory_raw)
charlieandthechocolatefactory_df <- data_frame(line = 1:2518,text = charlieandthechocolatefactory_clean)
charlieandthechocolatefactory <- charlieandthechocolatefactory_df %>% mutate(linenumber = row_number(),
                                                                             chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", ignore_case = TRUE)))) 

crimepunishment_clean <- cleanup(crimepunishment_raw)
crimepunishment_df <- data_frame(line = 1:22264,text = crimepunishment_clean)
crimepunishment <- crimepunishment_df %>% mutate(linenumber = row_number(), 
                                                 chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", ignore_case = TRUE)))) 
                                                                                         
orwell1984_clean <- cleanup(orwell1984_raw)
orwell1984_df <- data_frame(line = 1:13782,text = orwell1984_clean)
orwell1984 <- orwell1984_df %>% mutate(linenumber = row_number(),
                                       chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                                                               ignore_case = TRUE)))) 

mobydick_clean <- cleanup(mobydick_raw)
mobydick_df <- data_frame(line = 1:22963,text = mobydick_clean)
mobydick <- mobydick_df %>% mutate(linenumber = row_number(),
                                   chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
                                                                           ignore_case = TRUE)))) 

treasureisland_clean <- cleanup(treasureisland_raw)
treasureisland_df <- data_frame(line = 1:8322,text = treasureisland_clean)
treasureisland <- treasureisland_df %>% mutate(linenumber = row_number(),
                                               chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", ignore_case = TRUE))))                                         

hitchhikersguide_clean <- cleanup(hitchhikersguide_raw)
hitchhikersguide_df <- data_frame(line = 1:7368,text = hitchhikersguide_clean)
hitchhikersguide <- hitchhikersguide_df %>% mutate(linenumber = row_number(),
                                               chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]", ignore_case = TRUE))))                                         


#####> Word frequencies, plots& word clouds ####

tidy_orwell1984 <- orwell1984 %>%
 unnest_tokens(word, text) %>%
 anti_join(stop_words)

tidy_orwell1984 %>%
 count(word, sort = TRUE)

tidy_crimepunishment <- crimepunishment %>%
 unnest_tokens(word, text) %>%
 anti_join(stop_words)

View(tidy_crimepunishment %>%
 count(word, sort = TRUE))

tidy_charlieandthechocolatefactory <- charlieandthechocolatefactory %>%
 unnest_tokens(word, text) %>%
 anti_join(stop_words)

tidy_charlieandthechocolatefactory %>%
 count(word, sort = TRUE)

tidy_mobydick <- mobydick %>%
 unnest_tokens(word, text) %>%
 anti_join(stop_words)

tidy_mobydick %>%
 count(word, sort = TRUE)

#tidy_treasureisland <- treasureisland %>%
#unnest_tokens(word, text) %>%
#anti_join(stop_words)

#tidy_treasureisland %>%
# count(word, sort = TRUE)

tidy_hitchhikersguide <- hitchhikersguide %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

tidy_hitchhikersguide %>%
  count(word, sort = TRUE)

# plots word freq

tidy_charlieandthechocolatefactory %>%
 count(word, sort = TRUE) %>%
 top_n(20) %>%
 mutate(word = reorder(word, n)) %>%
 ggplot(aes(word, n)) +
 geom_col() +
 xlab(NULL) +
 coord_flip()

tidy_Orwell1984 %>%
 count(word, sort = TRUE) %>%
 top_n(20) %>%
 mutate(word = reorder(word, n)) %>%
 ggplot(aes(word, n)) +
 geom_col() +
 xlab(NULL) +
 coord_flip()

tidy_crimepunishment %>%
 count(word, sort = TRUE) %>%
 top_n(20) %>%
 mutate(word = reorder(word, n)) %>%
 ggplot(aes(word, n)) +
 geom_col() +
 xlab(NULL) +
 coord_flip()

tidy_mobydick %>%
 count(word, sort = TRUE) %>%
 top_n(20) %>%
 mutate(word = reorder(word, n)) %>%
 ggplot(aes(word, n)) +
 geom_col() +
 xlab(NULL) +
 coord_flip()

tidy_treasureisland %>%
 count(word, sort = TRUE) %>%
 top_n(20) %>%
 mutate(word = reorder(word, n)) %>%
 ggplot(aes(word, n)) +
 geom_col() +
 xlab(NULL) +
 coord_flip()

tidy_capital %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_hitchhikersguide %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_postoffice %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

tidy_hamonrye %>%
  count(word, sort = TRUE) %>%
  top_n(20) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

# word cloud 

# 1984
OrwellCloud  <- Corpus (VectorSource(orwell1984_clean))
OrwellCloud <-tm_map(OrwellCloud, tolower)
OrwellCloud <-tm_map(OrwellCloud, removeNumbers)
OrwellCloud <-tm_map(OrwellCloud, removePunctuation)
OrwellCloud <-tm_map(OrwellCloud, removeWords, stopwords("english"))
OrwellCloud <-tm_map(OrwellCloud, stripWhitespace)
#OrwellCloud<-tm_map(OrwellCloud,removeWords, c("winston", "round")) # for removing specific words
TDM_OrwellCloud<-TermDocumentMatrix (OrwellCloud) #Creates a TDM
TDM1<-as.matrix(TDM_OrwellCloud) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word

summary(v)

wordcloud (OrwellCloud , scale=c(5,0.5), max.words=50, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))

# word clouds
FearCloud <- Corpus (VectorSource(fearandloathing))
FearCloud <-tm_map(FearCloud, tolower)
FearCloud <-tm_map(FearCloud, removeNumbers)
FearCloud <-tm_map(FearCloud, removePunctuation)
FearCloud <-tm_map(FearCloud, removeWords, stopwords("english"))
FearCloud <-tm_map(FearCloud, stripWhitespace)
FearCloud<-tm_map(FearCloud,removeWords, c("said", "just", "can","att")) # for removing specific words

TDM_FearCloud<-TermDocumentMatrix (FearCloud) #Creates a TDM
TDM_Fear<-as.matrix(TDM_FearCloud) #Convert this into a matrix format
#v <- sort(rowSums(TDM_Fear), decreasing = TRUE) #Gives you the frequencies for every word
#v
wordcloud (FearCloud , scale=c(4,0.25), max.words=40, random.order=FALSE, rot.per=0.25, use.r.layout=T, colors=brewer.pal(8, "Dark2"))


crimeCloud  <- Corpus (VectorSource(crimepunishment_clean))
crimeCloud <-tm_map(crimeCloud, tolower)
crimeCloud <-tm_map(crimeCloud, removeNumbers)
crimeCloud <-tm_map(crimeCloud, removePunctuation)
crimeCloud <-tm_map(crimeCloud, removeWords, stopwords("english"))
crimeCloud <-tm_map(crimeCloud, stripWhitespace)
#OrwellCloud<-tm_map(OrwellCloud,removeWords, c("winston", "round")) # for removing specific words
TDM_crimeCloud <-TermDocumentMatrix (crimeCloud) #Creates a TDM
TDM1 <- as.matrix(TDM_crimeCloud) #Convert this into a matrix format
v = sort(rowSums(TDM1), decreasing = TRUE) #Gives you the frequencies for every word

summary(v)

wordcloud (crimeCloud , scale=c(5,0.5), max.words=40, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))

#alt
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud_packages.png", width=1280,height=800)

ap.v <- sort(rowSums(TDM_Fear),decreasing=TRUE)
ap.d <- data.frame(word = names(ap.v),freq=ap.v)
table(ap.d$freq)

wordcloud(ap.d$word,ap.d$freq, scale=c(8,.2),min.freq=3,
         max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)

#####> Sentiments ####
# playing around

get_nrc_sentiment(orw)
get_nrc_sentiment(crime)

get_nrc_sentiment(hitchbegin)
hitchbegin <-as.character(hitchhikersguide[5:20,2])

get_nrc_sentiment(crimebegin)
crimebegin <- as.character(crimepunishment[2:200,2])

crime <- as.character(crimepunishment[10:900,2])

orw <- as.character(orwell1984[10:800,2])

ran <- c("wind","cold","beer","toilet","war","ghetto","joy","happy","cat","snake","temptation","love","government","armageddon")

# stting up lexicons

unique(sentiments$lexicon)

View(sentiments) 
bing <- sentiments %>%
  filter(lexicon == "bing") %>%
  select(-score)

afinn <- sentiments %>%
  filter(lexicon == "AFINN") %>%
  select(-sentiment)

nrc <- sentiments %>%
  filter(lexicon == "nrc") %>% select(-score)
  
          
nrc_posneg <- sentiments %>%
  filter(lexicon == "nrc") %>% 
  filter (sentiment == "negative" | sentiment == "positive") %>% select(-score)

bing <- sentiments %>%
  filter(lexicon == "bing") %>%
  select(-score)


loughran_posneg <- sentiments %>%
  filter(lexicon == "loughran") %>% filter(sentiment %in% c("positive","negative")) %>%
select(-score)

loughran_nrc_combo <- rbind(nrc_posneg, loughran_posneg)
loughran_nrc_combo_uniq <- loughran_nrc_combo[loughran_nrc_combo$word %in% names(which(table(loughran_nrc_combo$word) < 2)) , ]

####> NRC ####

nrc_simple <- nrc %>% filter (sentiment %in% c("negative","positive"))
nrc_simple_1984 <- nrc_simple %>% filter (word != "brother" & word != "victory") # somewhat rectifying 1984 specific vocab
#orwell
orwellsentiment_nrc <- tidy_orwell1984 %>%
  inner_join(nrc_simple_1984) %>% 
  count(index = linenumber %/% 100, sentiment) %>% # or 150, 75? maybe leave as 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative)
# details
orwellsentiment_nrc_details <- tidy_orwell1984 %>%
  inner_join(nrc_simple_1984) %>% mutate(index = linenumber %/% 100) %>% 
  select(linenumber, chapter, word, sentiment, index) 
# mean
mean(orwellsentiment_nrc$sentiment)
# peaks/ lows
orwellsentiment_nrc_peaks <- orwellsentiment_nrc %>% filter (sentiment > 17 | sentiment < -17)

# look for details
View(orwellsentiment_nrc_details %>% filter(index %in% orwellsentiment_nrc_peaks$index))
# look for words
orwellsentiment_nrc_details %>% filter (word == "blackness")

View(orwellsentiment_nrc_details)

# crime
crimesentiment_nrc <- tidy_crimepunishment %>%
  inner_join(nrc_simple) %>% 
  count(index = linenumber %/% 110, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative)
#details
crimesentiment_nrc_details <- tidy_crimepunishment %>%
  inner_join(nrc_simple) %>% mutate(index = linenumber %/% 110) %>% 
  select(linenumber, chapter, word, sentiment, index) 
# looking for things
View(crimesentiment_nrc_details %>% filter (index == 18))
View(crimesentiment_nrc)

#hitchhiker's
hitchhikersentiment_nrc <- tidy_hitchhikersguide %>%
  inner_join(nrc_simple) %>% 
  count(index = linenumber %/% 80, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative)
#details
hitchhikersentiment_nrc_details <- tidy_hitchhikersguide %>%
  inner_join(nrc_simple) %>% mutate(index = linenumber %/% 80) %>% 
  select(linenumber, chapter, word, sentiment, index) 
#loking for things
hitchhikersentiment_nrc_details  %>% filter (word == "therapeutic")

#charlie
charliesentiment_nrc <- tidy_charlieandthechocolatefactory %>%
  inner_join(nrc_simple) %>% 
  count(index = linenumber %/% 35, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative)
#details
charliesentiment_nrc_details <- tidy_charlieandthechocolatefactory %>%
  inner_join(nrc_simple) %>% mutate(index = linenumber %/% 35) %>% 
  select(linenumber, chapter, word, sentiment, index) 
#looking for things
charliesentiment_nrc_details %>% filter (word == "perish")

View(charliesentiment_nrc_details %>% filter (index== 32))
View(charliesentiment_nrc)

mobysentiment_nrc <- tidy_mobydick %>%
  inner_join(nrc_simple) %>% 
  count(index = linenumber %/% 100, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative)

####> NRC plots ####

pcrime_nrc <- ggplot(crimesentiment_nrc, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Crime & Punishment",
       y = "Sentiment") +
  scale_fill_viridis(end = 0.75, discrete=TRUE, direction = -1) +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

pcharlie_nrc <- ggplot(charliesentiment_nrc, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = " Charlie & the Chocolate Factory NRC",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

porwell_nrc <- ggplot(orwellsentiment_nrc, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = " 1984",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

View(orwellsentiment_nrc)

phitch_nrc <- ggplot(hitchhikersentiment_nrc, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Hitchhiker's Guide",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

pmoby_nrc <- ggplot(mobysentiment_nrc, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Moby Dick NRC",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

####> NRC with emotions ####

nrc_1984 <- nrc %>% filter (word != "brother" & word != "victory" & word != "smith") # somewhat rectifying 1984 specific vocab
# orwell
orwellsentiment_nrc_emo <- tidy_orwell1984 %>%
  inner_join(nrc_1984) %>% 
  count(index = linenumber %/% 100, sentiment) %>% # or 150, 75? maybe leave as 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative) %>%
  select(index,negative,positive,sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
# details
orwellsentiment_nrc_emo_details <- tidy_orwell1984 %>%
  inner_join(nrc_1984) %>%  count(linenumber,word, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% mutate(index = linenumber %/% 100) %>% 
  mutate(sentiment = positive - negative) %>% 
  select(index,linenumber, word, sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
#summary for pie charts etc
orwellsentiment_nrc_emo_summary <- tidy_orwell1984 %>%
  inner_join(nrc_1984) %>%  count(sentiment)
# look for words/ indexes
View(orwellsentiment_nrc_emo_details %>% filter (index >= 9))  
  
# crime
crimesentiment_nrc_emo <- tidy_crimepunishment %>%
  inner_join(nrc) %>% 
  count(index = linenumber %/% 110, sentiment) %>% # or 150, 75? maybe leave as 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative) %>%
  select(index,negative,positive,sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
# details
crimesentiment_nrc_emo_details <- tidy_crimepunishment %>%
  inner_join(nrc) %>%  count(linenumber,word, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% mutate(index = linenumber %/% 110) %>% 
  mutate(sentiment = positive - negative) %>% 
  select(index,linenumber, word, sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
#summary for pie charts etc
crimesentiment_nrc_emo_summary <- tidy_crimepunishment %>%
  inner_join(nrc) %>%  count(sentiment)
# look for words/ indexes
View(crimesentiment_nrc_emo_details %>% filter (index >= 9)) 

#hitchhiker's
hitchsentiment_nrc_emo <- tidy_hitchhikersguide %>%
  inner_join(nrc) %>% 
  count(index = linenumber %/% 80, sentiment) %>% # or 150, 75? maybe leave as 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative) %>%
  select(index,negative,positive,sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
# details
hitchsentiment_nrc_emo_details <- tidy_hitchhikersguide %>%
  inner_join(nrc) %>%  count(linenumber,word, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% mutate(index = linenumber %/% 80) %>% 
  mutate(sentiment = positive - negative) %>% 
  select(index,linenumber, word, sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
#summary for pie charts etc
hitchsentiment_nrc_emo_summary <- tidy_hitchhikersguide %>%
  inner_join(nrc) %>%  count(sentiment)
# look for words/ indexes
View(hitchsentiment_nrc_emo_details %>% filter (index >= 9)) 
View(hitchsentiment_nrc_emo_details %>% filter (word == "therapeutic")) 

#charlie
charliesentiment_nrc_emo <- tidy_charlieandthechocolatefactory %>%
  inner_join(nrc) %>% 
  count(index = linenumber %/% 35, sentiment) %>% # or 150, 75? maybe leave as 
  spread(sentiment, n, fill = 0) %>% 
  mutate(sentiment = positive - negative) %>%
  select(index,negative,positive,sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
# details
charliesentiment_nrc_emo_details <- tidy_charlieandthechocolatefactory %>%
  inner_join(nrc) %>%  count(linenumber,word, sentiment) %>% 
  spread(sentiment, n, fill = 0) %>% mutate(index = linenumber %/% 35) %>% 
  mutate(sentiment = positive - negative) %>% 
  select(index,linenumber, word, sentiment, anger,disgust,fear, sadness, anticipation,joy,trust,surprise)
#summary for pie charts etc
charliesentiment_nrc_emo_summary <- tidy_charlieandthechocolatefactory %>%
  inner_join(nrc) %>%  count(sentiment)
# look for words/ indexes
View(charliesentiment_nrc_emo_details %>% filter (index >= 9)) 
View(charliesentiment_nrc_emo_details %>% filter (word == "wonka")) 

####> NRC with Emos plots ####

pcrime_nrc_emos <- ggplot(crimesentiment_nrc_emo, aes(index, sentiment), alpha=0.6) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Crime and Punishment with Emos",
       y = "Sentiment", x = "Index (1 equals about 2 pages)") +
  scale_fill_viridis(end = 0.75, discrete=TRUE, direction = -1)# +

# playing around with different themes
pcrime_nrc_emos + theme_xkcd()
pcrime_nrc_emos + theme_economist() + scale_colour_economist()
pcrime_nrc_emos + theme_tufte() 
porwell_nrc_emos + theme_economist() + scale_colour_economist()
porwell_nrc_emos  + theme_tufte() 

#  theme(strip.text=element_text(hjust=0)) +
#  theme(strip.text = element_text(face = "italic"))


pcrime_nrc_emos + geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=sadness), colour = "blue") +
 # geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=disgust), colour = "yellow") +
 # geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=fear), colour = "black") +
 # geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=joy), colour = "green") +
 geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=anger), colour = "red") +
 # geom_line(data=crimesentiment_nrc_emo, aes(x=index, y=surprise), colour = "orange") +
  theme_economist() + scale_colour_economist()


# charlie plot
pcharlie_nrc_emos <- ggplot(charliesentiment_nrc_emo, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = " Charlie & the Chocolate Factory NRC Emos",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic"))

pcharlie_nrc_emos + geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=sadness), colour = "blue") +
  geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=disgust), colour = "yellow") +
  geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=fear), colour = "black") +
  geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=joy), colour = "green") +
  geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=anger), colour = "red") +
  geom_line(data=charliesentiment_nrc_emo, aes(x=index, y=surprise), colour = "orange")

# 1984 plot
porwell_nrc_emos <- ggplot(orwellsentiment_nrc_emo, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = " 1984 with Emos",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

porwell_nrc_emos + geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=sadness), colour = "blue") +
  geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=disgust), colour = "yellow") +
  geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=fear), colour = "black") +
  geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=joy), colour = "green") +
  geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=anger), colour = "red") +
  geom_line(data=orwellsentiment_nrc_emo, aes(x=index, y=surprise), colour = "orange")

# hichhiker's guide
phitch_nrc_emos <- ggplot(hitchsentiment_nrc_emo, aes(index, sentiment)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Hitchhiker's Guide NRC Emos",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

phitch_nrc_emos + geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=sadness), colour = "blue") +
  geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=disgust), colour = "yellow") +
  geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=fear), colour = "black") +
  geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=joy), colour = "green") +
  geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=anger), colour = "red") +
  geom_line(data=hitchsentiment_nrc_emo, aes(x=index, y=surprise), colour = "orange")

multiplot(pcrime_nrc,porwell_nrc, pcharlie_nrc, phitch_nrc, cols=2)

####> SentimentR ####
# unlisting & tokenize by sentence
# 1984
orwell1984_raw_uncontracted <- replace_word_elongation(orwell1984_raw)
orwell1984_raw_uncontracted <- replace_contraction(orwell1984_raw_uncontracted)

orwell_raw_unlist <- paste(unlist(orwell1984_raw_uncontracted), collapse =" ")
orwell_sentences <- get_sentences(orwell_raw_unlist)
orwell1984_sentiment_sentences <- sentiment(orwell_sentences)

orwell1984_sentiment_sentences_df <- as.data.frame(orwell1984_sentiment_sentences)
orwell1984_sentiment_sentences_df$sentiment <- round(orwell1984_sentiment_sentences_df$sentiment, digits = 7)

orwell_sentences_df <- as.data.frame(orwell_sentences)
orwell1984_sentences_df <- data.frame(matrix(unlist(orwell_sentences_df), byrow=T), stringsAsFactors=FALSE)
colnames(orwell1984_sentences_df) <- "text"

orwell1984_sentences_df$chars <-nchar(orwell1984_sentences_df$text)
orwell1984_sentiment_sentences_df$chars <- orwell1984_sentences_df$chars
orwell1984_sentiment_sentences_df$chars_sum <- cumsum(orwell1984_sentiment_sentences_df$chars)
orwell1984_sentiment_sentences_df <- orwell1984_sentiment_sentences_df %>%
  mutate(line = chars_sum %/% 60)
orwell1984_sentiment_sentences_df <- orwell1984_sentiment_sentences_df %>%
  mutate(index = line %/% 65)
orwell1984_sentiment_sentences_df$sentence_id <- NULL

orwell1984_sentimentr_summary <- orwell1984_sentiment_sentences_df %>%
  group_by(index) %>% summarise(sentiment_sum = sum(sentiment))

# charlie

charlie_raw_uncontracted <- replace_word_elongation(charlieandthechocolatefactory_raw)
charlie_raw_uncontracted <- replace_contraction(charlie_raw_uncontracted)

charlie_raw_unlist <- paste(unlist(charlie_raw_uncontracted), collapse =" ")
charlie_sentences <- get_sentences(charlie_raw_unlist)
charlie_sentiment_sentences <- sentiment(charlie_sentences)

charlie_sentiment_sentences_df <- as.data.frame(charlie_sentiment_sentences)
charlie_sentiment_sentences_df$sentiment <- round(charlie_sentiment_sentences_df$sentiment, digits = 7)

charlie_sentences_df <- as.data.frame(charlie_sentences)
charlie_sentences_df <- data.frame(matrix(unlist(charlie_sentences_df), byrow=T), stringsAsFactors=FALSE)
colnames(charlie_sentences_df) <- "text"

View(charlie_sentences_df)
View(charlie_sentimentr_summary)

charlie_sentences_df$sentiment <- charlie_sentiment_sentences_df$sentiment

charlie_sentences_df$chars <-nchar(charlie_sentences_df$text)
charlie_sentences_df$chars_sum <- cumsum(charlie_sentences_df$chars)

charlie_sentences_df <- charlie_sentences_df %>%
  mutate(line = chars_sum %/% 60)
charlie_sentences_df <- charlie_sentences_df %>%
  mutate(index = line %/% 40)

View(charlie_sentences_df)

charlie_sentiment_sentences_df$chars <- charlie_sentences_df$chars
charlie_sentiment_sentences_df$chars_sum <- cumsum(charlie_sentiment_sentences_df$chars)
charlie_sentiment_sentences_df <- charlie_sentiment_sentences_df %>%
  mutate(line = chars_sum %/% 60)
charlie_sentiment_sentences_df <- charlie_sentiment_sentences_df %>%
  mutate(index = line %/% 40)
charlie_sentiment_sentences_df$sentence_id <- NULL

charlie_sentimentr_summary <- charlie_sentiment_sentences_df %>%
  group_by(index) %>% summarise(sentiment_sum = sum(sentiment))

View(charlie_sentiment_sentences_df)

# crime

crime_raw_uncontracted <- replace_word_elongation(crimepunishment_raw)
crime_raw_uncontracted <- replace_contraction(crime_raw_uncontracted)

crime_raw_unlist <- paste(unlist(crime_raw_uncontracted), collapse =" ")
crime_sentences <- get_sentences(crime_raw_unlist)
crime_sentiment_sentences <- sentiment(crime_sentences)

crime_sentiment_sentences_df <- as.data.frame(crime_sentiment_sentences)
crime_sentiment_sentences_df$sentiment <- round(crime_sentiment_sentences_df$sentiment, digits = 7)

crime_sentences_df <- as.data.frame(crime_sentences)
crime_sentences_df <- data.frame(matrix(unlist(crime_sentences_df), byrow=T), stringsAsFactors=FALSE)
colnames(crime_sentences_df) <- "text"

crime_sentences_df$chars <-nchar(crime_sentences_df$text)
crime_sentences_df$chars_sum <- cumsum(crime_sentences_df$chars)

crime_sentences_df <- crime_sentences_df %>%
  mutate(line = chars_sum %/% 70)
crime_sentences_df <- crime_sentences_df %>%
  mutate(index = line %/% 80)

crime_sentences_df$sentiment <- crime_sentiment_sentences_df$sentiment

crime_sentiment_sentences_df$chars <- crime_sentences_df$chars
crime_sentiment_sentences_df$chars_sum <- cumsum(crime_sentiment_sentences_df$chars)
crime_sentiment_sentences_df <- crime_sentiment_sentences_df %>%
  mutate(line = chars_sum %/% 70)

crime_sentiment_sentences_df <- crime_sentiment_sentences_df %>%
  mutate(index = line %/% 80)

crime_sentiment_sentences_df$sentence_id <- NULL

crime_sentimentr_summary <- crime_sentiment_sentences_df %>%
  group_by(index) %>% summarise(sentiment_sum = sum(sentiment))

# plot

porwell_sentimentr <- ggplot(orwell1984_sentimentr_summary, aes(index, sentiment_sum)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "1984 SentimentR",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

porwell_nrc

pcharlie_sentimentr <- ggplot(charlie_sentimentr_summary, aes(index, sentiment_sum)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Charlie SentimentR",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

pcharlie_nrc

pcrime_sentimentr <- ggplot(crime_sentimentr_summary, aes(index, sentiment_sum)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  theme_minimal(base_size = 11) +
  labs(title = "Crime & Punishment SentimentR",
       y = "Sentiment") +
  theme(strip.text=element_text(hjust=0)) +
  theme(strip.text = element_text(face = "italic")) 

pcrime_nrc

####> Functions ####

multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  numPlots = length(plots)
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

cleanup <- function(x) {
  library(textclean)
  result <- tolower(x)
  result <- replace_word_elongation(result)
  result <- replace_contraction(result)
  result <- strwrap(result, width = 72)
  return(result)
}
